/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface MyComponent {
    }
    interface SAbdullakhBenefitsBots {
        "BenefitsBots": any;
    }
    interface SAbdullakhBenefitsBotsBlock {
        "arr": any;
    }
    interface SAbdullakhConsultation {
        "Consultation": any;
    }
    interface SAbdullakhHeader {
        /**
          * массив меню
         */
        "header": any;
    }
    interface SAbdullakhHeaderCenter {
        /**
          * массив меню
         */
        "arr": any;
    }
    interface SAbdullakhHeaderEnd {
        /**
          * массив меню
         */
        "arr": any;
    }
    interface SAbdullakhHeaderStart {
        /**
          * объект с url logo
         */
        "arr": any;
    }
    interface SAbdullakhPerformanceInformation {
        "PerformanceInformation": any;
    }
    interface SAbdullakhPerformanceInformationList {
        "PerformanceInformation": any;
    }
    interface SAbdullakhProductInformation {
        "ProductInformation": any;
    }
    interface SAbdullakhProductInformationBlocks {
        "arr": any;
    }
    interface SAbdullakhProductPresentation {
        /**
          * массив для вывода элементов ProductPresentationTitle
         */
        "ProductPresentation": any;
    }
    interface SAbdullakhProductPresentationImg {
        /**
          * массив для вывода url img в компоненете ProductPresentationImg
         */
        "img": string;
    }
    interface SAbdullakhProductPresentationTitle {
        /**
          * массив для вывода элементов ProductPresentationTitle
         */
        "arr": any;
    }
    interface SAbdullakhTariffs {
    }
    interface SAbdullakhTransitionCreateBot {
        "TransitionCreateBot": any;
    }
    interface SAbdullakhTransitionCreateBotFollow {
        "arr": any;
    }
    interface SAbdullakhTransitionCreateBotTitle {
        "arr": any;
    }
}
declare global {
    interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {
    }
    var HTMLMyComponentElement: {
        prototype: HTMLMyComponentElement;
        new (): HTMLMyComponentElement;
    };
    interface HTMLSAbdullakhBenefitsBotsElement extends Components.SAbdullakhBenefitsBots, HTMLStencilElement {
    }
    var HTMLSAbdullakhBenefitsBotsElement: {
        prototype: HTMLSAbdullakhBenefitsBotsElement;
        new (): HTMLSAbdullakhBenefitsBotsElement;
    };
    interface HTMLSAbdullakhBenefitsBotsBlockElement extends Components.SAbdullakhBenefitsBotsBlock, HTMLStencilElement {
    }
    var HTMLSAbdullakhBenefitsBotsBlockElement: {
        prototype: HTMLSAbdullakhBenefitsBotsBlockElement;
        new (): HTMLSAbdullakhBenefitsBotsBlockElement;
    };
    interface HTMLSAbdullakhConsultationElement extends Components.SAbdullakhConsultation, HTMLStencilElement {
    }
    var HTMLSAbdullakhConsultationElement: {
        prototype: HTMLSAbdullakhConsultationElement;
        new (): HTMLSAbdullakhConsultationElement;
    };
    interface HTMLSAbdullakhHeaderElement extends Components.SAbdullakhHeader, HTMLStencilElement {
    }
    var HTMLSAbdullakhHeaderElement: {
        prototype: HTMLSAbdullakhHeaderElement;
        new (): HTMLSAbdullakhHeaderElement;
    };
    interface HTMLSAbdullakhHeaderCenterElement extends Components.SAbdullakhHeaderCenter, HTMLStencilElement {
    }
    var HTMLSAbdullakhHeaderCenterElement: {
        prototype: HTMLSAbdullakhHeaderCenterElement;
        new (): HTMLSAbdullakhHeaderCenterElement;
    };
    interface HTMLSAbdullakhHeaderEndElement extends Components.SAbdullakhHeaderEnd, HTMLStencilElement {
    }
    var HTMLSAbdullakhHeaderEndElement: {
        prototype: HTMLSAbdullakhHeaderEndElement;
        new (): HTMLSAbdullakhHeaderEndElement;
    };
    interface HTMLSAbdullakhHeaderStartElement extends Components.SAbdullakhHeaderStart, HTMLStencilElement {
    }
    var HTMLSAbdullakhHeaderStartElement: {
        prototype: HTMLSAbdullakhHeaderStartElement;
        new (): HTMLSAbdullakhHeaderStartElement;
    };
    interface HTMLSAbdullakhPerformanceInformationElement extends Components.SAbdullakhPerformanceInformation, HTMLStencilElement {
    }
    var HTMLSAbdullakhPerformanceInformationElement: {
        prototype: HTMLSAbdullakhPerformanceInformationElement;
        new (): HTMLSAbdullakhPerformanceInformationElement;
    };
    interface HTMLSAbdullakhPerformanceInformationListElement extends Components.SAbdullakhPerformanceInformationList, HTMLStencilElement {
    }
    var HTMLSAbdullakhPerformanceInformationListElement: {
        prototype: HTMLSAbdullakhPerformanceInformationListElement;
        new (): HTMLSAbdullakhPerformanceInformationListElement;
    };
    interface HTMLSAbdullakhProductInformationElement extends Components.SAbdullakhProductInformation, HTMLStencilElement {
    }
    var HTMLSAbdullakhProductInformationElement: {
        prototype: HTMLSAbdullakhProductInformationElement;
        new (): HTMLSAbdullakhProductInformationElement;
    };
    interface HTMLSAbdullakhProductInformationBlocksElement extends Components.SAbdullakhProductInformationBlocks, HTMLStencilElement {
    }
    var HTMLSAbdullakhProductInformationBlocksElement: {
        prototype: HTMLSAbdullakhProductInformationBlocksElement;
        new (): HTMLSAbdullakhProductInformationBlocksElement;
    };
    interface HTMLSAbdullakhProductPresentationElement extends Components.SAbdullakhProductPresentation, HTMLStencilElement {
    }
    var HTMLSAbdullakhProductPresentationElement: {
        prototype: HTMLSAbdullakhProductPresentationElement;
        new (): HTMLSAbdullakhProductPresentationElement;
    };
    interface HTMLSAbdullakhProductPresentationImgElement extends Components.SAbdullakhProductPresentationImg, HTMLStencilElement {
    }
    var HTMLSAbdullakhProductPresentationImgElement: {
        prototype: HTMLSAbdullakhProductPresentationImgElement;
        new (): HTMLSAbdullakhProductPresentationImgElement;
    };
    interface HTMLSAbdullakhProductPresentationTitleElement extends Components.SAbdullakhProductPresentationTitle, HTMLStencilElement {
    }
    var HTMLSAbdullakhProductPresentationTitleElement: {
        prototype: HTMLSAbdullakhProductPresentationTitleElement;
        new (): HTMLSAbdullakhProductPresentationTitleElement;
    };
    interface HTMLSAbdullakhTariffsElement extends Components.SAbdullakhTariffs, HTMLStencilElement {
    }
    var HTMLSAbdullakhTariffsElement: {
        prototype: HTMLSAbdullakhTariffsElement;
        new (): HTMLSAbdullakhTariffsElement;
    };
    interface HTMLSAbdullakhTransitionCreateBotElement extends Components.SAbdullakhTransitionCreateBot, HTMLStencilElement {
    }
    var HTMLSAbdullakhTransitionCreateBotElement: {
        prototype: HTMLSAbdullakhTransitionCreateBotElement;
        new (): HTMLSAbdullakhTransitionCreateBotElement;
    };
    interface HTMLSAbdullakhTransitionCreateBotFollowElement extends Components.SAbdullakhTransitionCreateBotFollow, HTMLStencilElement {
    }
    var HTMLSAbdullakhTransitionCreateBotFollowElement: {
        prototype: HTMLSAbdullakhTransitionCreateBotFollowElement;
        new (): HTMLSAbdullakhTransitionCreateBotFollowElement;
    };
    interface HTMLSAbdullakhTransitionCreateBotTitleElement extends Components.SAbdullakhTransitionCreateBotTitle, HTMLStencilElement {
    }
    var HTMLSAbdullakhTransitionCreateBotTitleElement: {
        prototype: HTMLSAbdullakhTransitionCreateBotTitleElement;
        new (): HTMLSAbdullakhTransitionCreateBotTitleElement;
    };
    interface HTMLElementTagNameMap {
        "my-component": HTMLMyComponentElement;
        "s-abdullakh-benefits-bots": HTMLSAbdullakhBenefitsBotsElement;
        "s-abdullakh-benefits-bots-block": HTMLSAbdullakhBenefitsBotsBlockElement;
        "s-abdullakh-consultation": HTMLSAbdullakhConsultationElement;
        "s-abdullakh-header": HTMLSAbdullakhHeaderElement;
        "s-abdullakh-header-center": HTMLSAbdullakhHeaderCenterElement;
        "s-abdullakh-header-end": HTMLSAbdullakhHeaderEndElement;
        "s-abdullakh-header-start": HTMLSAbdullakhHeaderStartElement;
        "s-abdullakh-performance-information": HTMLSAbdullakhPerformanceInformationElement;
        "s-abdullakh-performance-information-list": HTMLSAbdullakhPerformanceInformationListElement;
        "s-abdullakh-product-information": HTMLSAbdullakhProductInformationElement;
        "s-abdullakh-product-information-blocks": HTMLSAbdullakhProductInformationBlocksElement;
        "s-abdullakh-product-presentation": HTMLSAbdullakhProductPresentationElement;
        "s-abdullakh-product-presentation-img": HTMLSAbdullakhProductPresentationImgElement;
        "s-abdullakh-product-presentation-title": HTMLSAbdullakhProductPresentationTitleElement;
        "s-abdullakh-tariffs": HTMLSAbdullakhTariffsElement;
        "s-abdullakh-transition-create-bot": HTMLSAbdullakhTransitionCreateBotElement;
        "s-abdullakh-transition-create-bot-follow": HTMLSAbdullakhTransitionCreateBotFollowElement;
        "s-abdullakh-transition-create-bot-title": HTMLSAbdullakhTransitionCreateBotTitleElement;
    }
}
declare namespace LocalJSX {
    interface MyComponent {
    }
    interface SAbdullakhBenefitsBots {
        "BenefitsBots"?: any;
    }
    interface SAbdullakhBenefitsBotsBlock {
        "arr"?: any;
    }
    interface SAbdullakhConsultation {
        "Consultation"?: any;
    }
    interface SAbdullakhHeader {
        /**
          * массив меню
         */
        "header"?: any;
    }
    interface SAbdullakhHeaderCenter {
        /**
          * массив меню
         */
        "arr"?: any;
    }
    interface SAbdullakhHeaderEnd {
        /**
          * массив меню
         */
        "arr"?: any;
    }
    interface SAbdullakhHeaderStart {
        /**
          * объект с url logo
         */
        "arr"?: any;
    }
    interface SAbdullakhPerformanceInformation {
        "PerformanceInformation"?: any;
    }
    interface SAbdullakhPerformanceInformationList {
        "PerformanceInformation"?: any;
    }
    interface SAbdullakhProductInformation {
        "ProductInformation"?: any;
    }
    interface SAbdullakhProductInformationBlocks {
        "arr"?: any;
    }
    interface SAbdullakhProductPresentation {
        /**
          * массив для вывода элементов ProductPresentationTitle
         */
        "ProductPresentation"?: any;
    }
    interface SAbdullakhProductPresentationImg {
        /**
          * массив для вывода url img в компоненете ProductPresentationImg
         */
        "img"?: string;
    }
    interface SAbdullakhProductPresentationTitle {
        /**
          * массив для вывода элементов ProductPresentationTitle
         */
        "arr"?: any;
    }
    interface SAbdullakhTariffs {
    }
    interface SAbdullakhTransitionCreateBot {
        "TransitionCreateBot"?: any;
    }
    interface SAbdullakhTransitionCreateBotFollow {
        "arr"?: any;
    }
    interface SAbdullakhTransitionCreateBotTitle {
        "arr"?: any;
    }
    interface IntrinsicElements {
        "my-component": MyComponent;
        "s-abdullakh-benefits-bots": SAbdullakhBenefitsBots;
        "s-abdullakh-benefits-bots-block": SAbdullakhBenefitsBotsBlock;
        "s-abdullakh-consultation": SAbdullakhConsultation;
        "s-abdullakh-header": SAbdullakhHeader;
        "s-abdullakh-header-center": SAbdullakhHeaderCenter;
        "s-abdullakh-header-end": SAbdullakhHeaderEnd;
        "s-abdullakh-header-start": SAbdullakhHeaderStart;
        "s-abdullakh-performance-information": SAbdullakhPerformanceInformation;
        "s-abdullakh-performance-information-list": SAbdullakhPerformanceInformationList;
        "s-abdullakh-product-information": SAbdullakhProductInformation;
        "s-abdullakh-product-information-blocks": SAbdullakhProductInformationBlocks;
        "s-abdullakh-product-presentation": SAbdullakhProductPresentation;
        "s-abdullakh-product-presentation-img": SAbdullakhProductPresentationImg;
        "s-abdullakh-product-presentation-title": SAbdullakhProductPresentationTitle;
        "s-abdullakh-tariffs": SAbdullakhTariffs;
        "s-abdullakh-transition-create-bot": SAbdullakhTransitionCreateBot;
        "s-abdullakh-transition-create-bot-follow": SAbdullakhTransitionCreateBotFollow;
        "s-abdullakh-transition-create-bot-title": SAbdullakhTransitionCreateBotTitle;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "my-component": LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
            "s-abdullakh-benefits-bots": LocalJSX.SAbdullakhBenefitsBots & JSXBase.HTMLAttributes<HTMLSAbdullakhBenefitsBotsElement>;
            "s-abdullakh-benefits-bots-block": LocalJSX.SAbdullakhBenefitsBotsBlock & JSXBase.HTMLAttributes<HTMLSAbdullakhBenefitsBotsBlockElement>;
            "s-abdullakh-consultation": LocalJSX.SAbdullakhConsultation & JSXBase.HTMLAttributes<HTMLSAbdullakhConsultationElement>;
            "s-abdullakh-header": LocalJSX.SAbdullakhHeader & JSXBase.HTMLAttributes<HTMLSAbdullakhHeaderElement>;
            "s-abdullakh-header-center": LocalJSX.SAbdullakhHeaderCenter & JSXBase.HTMLAttributes<HTMLSAbdullakhHeaderCenterElement>;
            "s-abdullakh-header-end": LocalJSX.SAbdullakhHeaderEnd & JSXBase.HTMLAttributes<HTMLSAbdullakhHeaderEndElement>;
            "s-abdullakh-header-start": LocalJSX.SAbdullakhHeaderStart & JSXBase.HTMLAttributes<HTMLSAbdullakhHeaderStartElement>;
            "s-abdullakh-performance-information": LocalJSX.SAbdullakhPerformanceInformation & JSXBase.HTMLAttributes<HTMLSAbdullakhPerformanceInformationElement>;
            "s-abdullakh-performance-information-list": LocalJSX.SAbdullakhPerformanceInformationList & JSXBase.HTMLAttributes<HTMLSAbdullakhPerformanceInformationListElement>;
            "s-abdullakh-product-information": LocalJSX.SAbdullakhProductInformation & JSXBase.HTMLAttributes<HTMLSAbdullakhProductInformationElement>;
            "s-abdullakh-product-information-blocks": LocalJSX.SAbdullakhProductInformationBlocks & JSXBase.HTMLAttributes<HTMLSAbdullakhProductInformationBlocksElement>;
            "s-abdullakh-product-presentation": LocalJSX.SAbdullakhProductPresentation & JSXBase.HTMLAttributes<HTMLSAbdullakhProductPresentationElement>;
            "s-abdullakh-product-presentation-img": LocalJSX.SAbdullakhProductPresentationImg & JSXBase.HTMLAttributes<HTMLSAbdullakhProductPresentationImgElement>;
            "s-abdullakh-product-presentation-title": LocalJSX.SAbdullakhProductPresentationTitle & JSXBase.HTMLAttributes<HTMLSAbdullakhProductPresentationTitleElement>;
            "s-abdullakh-tariffs": LocalJSX.SAbdullakhTariffs & JSXBase.HTMLAttributes<HTMLSAbdullakhTariffsElement>;
            "s-abdullakh-transition-create-bot": LocalJSX.SAbdullakhTransitionCreateBot & JSXBase.HTMLAttributes<HTMLSAbdullakhTransitionCreateBotElement>;
            "s-abdullakh-transition-create-bot-follow": LocalJSX.SAbdullakhTransitionCreateBotFollow & JSXBase.HTMLAttributes<HTMLSAbdullakhTransitionCreateBotFollowElement>;
            "s-abdullakh-transition-create-bot-title": LocalJSX.SAbdullakhTransitionCreateBotTitle & JSXBase.HTMLAttributes<HTMLSAbdullakhTransitionCreateBotTitleElement>;
        }
    }
}
